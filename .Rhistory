# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="scatter3d-basic")
pint(p)
print(p)
p <- plot_ly(z = ~volcano) %>% add_surface()
print(p)
x11()
p <- plot_ly(z = ~volcano) %>% add_surface()
print(p)
View(mtcars)
View(kd)
kd$x
kd$y
p <- plot_ly(x = kd$x, y = kd$y, z = kd$z) %>% add_surface()
plot(p)
#------------------------------------------------------------------------------------------------------
kd <- with(MASS::geyser, MASS::kde2d(duration, waiting, n = 50))
p <- plot_ly(x = kd$x, y = kd$y, z = kd$z) %>% add_surface()
plot(p)
kd$x
print(p)
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
p <- plot_ly(x = fundValueTable$year, y = 0, z = fundValueTable$fundValues) %>% add_surface()
print(p)
rep(0)
rep(0,10)
rep(0, length(fundValueTable$year))
p <- plot_ly(x = fundValueTable$year, y = rep(0.05, length(fundValueTable$year)), z = fundValueTable$fundValues) %>% add_surface()
print(p)
View(kd)
View(kd)
z
kd$z
kd$x
~kd$x
x  = kd$x
x
~ x
~x
print(~x)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, length(fundValueTable$year)), z = fundValueTable$fundValues) %>% add_surface()
p <- plot_ly(x = fundValueTable$year, y = rep(0.05, length(fundValueTable$year)), z = fundValueTable$fundValues, type='mesh3d') %>% add_surface()
print(p)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, length(fundValueTable$year)), z = fundValueTable$fundValues) %>% add_surface()
p <- plot_ly(x = ~fundValueTable$year, y = ~rep(0.05, length(fundValueTable$year)), z = ~fundValueTable$fundValues, type='mesh3d') %>% add_surface()
print(p)
x <- runif(50, 0, 1)
y <- runif(50, 0, 1)
z <- runif(50, 0, 1)
p <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d')
print(p)
y
x <- runif(50, 0, 1)
y <- runif(20, 0, 1)
z <- runif(50, 0, 1)
p <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d')
print(p)
y
x <- runif(50, 0, 1)
y <- runif(20, 0, 1)
z <- runif(20, 0, 1)
p <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d')
print(p)
x <- runif(20, 0, 1)
y <- runif(20, 0, 1)
z <- runif(20, 0, 1)
p <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d')
print(p)
p <- plot_ly(x = ~x, y = ~y, z = ~z, type = 'mesh3d') %>% add_surface()
print(p)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, length(fundValueTable$year)), z = fundValueTable$fundValues) %>% add_surface()
p <- plot_ly(x = ~fundValueTable$year, y = ~rep(0.05, length(fundValueTable$year)), z = ~fundValueTable$fundValues, type='mesh3d')
print(p)
fundValueTable$fundValues
as.matrix(fundValueTable$fundValues)
p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
print(p)
cbind(fundValueTable$fundValues,fundValueTable$fundValues)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 2), z = cbind(fundValueTable$fundValues,fundValueTable$fundValues)) %>% add_surface()
print(p)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
p <- plot_ly(x = fundValueTable$year, y = c(0.5,0.6), z = cbind(fundValueTable$fundValues,fundValueTable$fundValues)) %>% add_surface()
print(p)
fundValueTable$year
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
p <- plot_ly(x = fundValueTable$year, y = c(0.5,0.6), z = cbind(fundValueTable$fundValues,fundValueTable$fundValues)) #%>% add_surface()
print(p)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
p <- plot_ly(x = fundValueTable$year, y = c(0.5,0.6), z = cbind(fundValueTable$fundValues,fundValueTable$fundValues)) %>% add_surface()
print(p)
c(0.5,0.6)
#p <- plot_ly(x = fundValueTable$year, y = rep(0.05, 1), z = as.matrix(fundValueTable$fundValues)) %>% add_surface()
p <- plot_ly(x = c(0.5,0.6) , y = fundValueTable$year, z = cbind(fundValueTable$fundValues,fundValueTable$fundValues)) %>% add_surface()
print(p)
calculateFundValue <- function(investmentInterest){
tTimes <- length(profitTable$surviveYears)
#initialized array
fundValues <- vector(mode="numeric", length=tTimes)
interestMonthBased <- vector(mode="numeric", length=tTimes)
#data for year 0
year <- profitTable$surviveYears
fundValues[1] <- profitTable$money[1]
interestMonthBased[1] <- fundValues[1] * (1+investmentInterest/12)^12 - fundValues[1] # only calculate the interest
benefitPay <- profitTable$benefitPayment
accInterMonthBased[1] <- interestMonthBased[1]
accBenPay[1]<- benefitPay[1]
for (i in 1:(tTimes-1)) {
fundValues[i+1] <- fundValues[i] + interestMonthBased[i] - benefitPay[i]
if(fundValues[i+1] > 0){ #only calculate Interest when fund > 0
interestMonthBased[i+1] <- fundValues[i+1] * (1+investmentInterest/12)^12 - fundValues[i+1]
}
else {
interestMonthBased[i+1] <- 0
}
}
fT <- data.frame(year,fundValues, interestMonthBased, benefitPay)
return(fT)
}
calculateFundValue(0.05)
calculateFundValue(0.05)$fundValues
p <- plot_ly(x = c(0.5,0.6) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.06)$fundValues)) %>% add_surface()
print(p)
p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
print(p)
linspace()
linspace(2,5,100)
linspace(1, 10, 9)
seq(0,1,0.1)
interest
x
seq(0.05, 0.08, 0.001)
cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)
interestSeq <- seq(0.05, 0.08, 0.001)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
interestSeq <- seq(0.05, 0.06, 0.001)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
interestSeq <- seq(0.05, 0.055, 0.0001)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
interestSeq <- seq(0.05, 0.053, 0.0001)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
interestSeq <- seq(0.05, 0.053, 0.001)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
interestSeq <- seq(0.05, 0.053, 0.0005)
yearSeq <- fundValueTable$year
matrixFund <- matrix(, nrow = length(yearSeq), ncol = length(interestSeq)) # empty matrix
column <- 1
for (i in interestSeq){
matrixFund[,column] <- calculateFundValue(i)$fundValues
column <- column + 1
}
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface()
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund) %>% add_surface() %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund)
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, type = "surface") %>% add_surface() %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, type = "surface")
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = 0.5) %>% add_surface() %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = 0.1) %>% add_surface() %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = 0.1, type = "surface")  %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = "0.1"", type = "surface")  %>%
title = "Layout options in a 3d scatter plot",
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = "0.1", type = "surface")  %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, alpha = 0.1, type = "surface")  %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund, type = "surface")  %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
))
print(p)
#p <- plot_ly(x = c(0.5,0.51) , y = fundValueTable$year, z = cbind(calculateFundValue(0.05)$fundValues,calculateFundValue(0.051)$fundValues)) %>% add_surface()
p <- plot_ly(x = interestSeq  , y = yearSeq, z = matrixFund)  %>%
layout(
title = "Layout options in a 3d scatter plot",
scene = list(
xaxis = list(title = "Interest Monthly Based"),
yaxis = list(title = "Years"),
zaxis = list(title = "Fund [$US]")
)) %>%
add_surface(
contours = list(
z = list(
show=TRUE,
usecolormap=TRUE,
highlightcolor="#ff0000",
project=list(z=TRUE)
)
)
) %>%
layout(
scene = list(
camera=list(
eye = list(x=1.87, y=0.88, z=-0.64)
)
)
)
print(p)
source('C:/Users/huanglinc/Desktop/P2 Sta/CS567_Project1/project1_updated_c.R')
setwd("C:/Users/huanglinc/Desktop/P2 Sta/CS567_Project1")
source('C:/Users/huanglinc/Desktop/P2 Sta/CS567_Project1/project1_updated_c.R')
dens <- with(diamonds, tapply(price, INDEX = cut, density))
data <- data.frame(
x = unlist(lapply(dens, "[[", "x")),
y = unlist(lapply(dens, "[[", "y")),
cut = rep(names(dens), each = length(dens[[1]]$x)))
p <- plot_ly(data, x = ~x, y = ~y, z = ~cut, type = 'scatter3d', mode = 'lines', color = ~cut)
print(p)
cut
data$cut
View(data)
View(data)
calculateFundValue(0.05)
fv <- calculateFundValue(0.05)
fv
fv[,c("year", "fundvalues")]
fv[,c("year", "fundvalue")]
fv[,c("year", "fundValues")]
df
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("interest", "year", "fund")
colnames(df) <- x
df
df[,c("year","fund")]
df[,c("year","fund")] <- fv[,c("year", "fundValues")]
df[,c("year","fund")]
i<-0.05
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
tempdf
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("year", "fundValues", "interest")
i <- 0.05
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbin(df, tempdf)
i <- 0.05
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
i <- 0.05
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
df
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("year", "fundValues", "interest")
colnames(df) <- x
for (i in interestSeq){
i <- 0.05
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
}
df
f
f
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("year", "fundValues", "interest")
colnames(df) <- x
for (i in interestSeq){
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
}
df
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("year", "fundValues", "interest")
colnames(df) <- x
for (i in interestSeq){
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
}
p <- plot_ly(df, x = ~year, y = ~fundValues, z = ~interest, type = 'scatter3d', mode = 'lines', color = ~interest)
print(p)
source('C:/Users/huanglinc/Desktop/P2 Sta/CS567_Project1/project1_updated_c.R')
df <- data.frame(matrix(ncol = 3, nrow = 0))
x <- c("year", "fundValues", "interest")
colnames(df) <- x
for (i in interestSeq){
fv <- calculateFundValue(i)
tempdf <- fv[,c("year", "fundValues")]
tempdf$interest <- rep(i, length(tempdf$year))
df <- rbind(df, tempdf)
}
df$interest <- as.factor(df$interest)
p <- plot_ly(df, x = ~year, y = ~fundValues, z = ~interest, type = 'scatter3d', mode = 'lines', color = ~interest)
print(p)
p1 <- plot_ly(df, x = ~year, y = ~fundValues, z = ~interest, type = 'scatter3d', mode = 'markers', color = ~interest)
print(p1)
p1 <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'markers',
color = ~interest,
marker = list(size = 5, color = "red", symbol = 104)
)
print(p1)
p1 <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'markers',
color = ~interest,
marker = list(size = 1, symbol = 104)
)
print(p1)
p1 <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'markers',
color = ~interest,
marker = list(size = 3, symbol = 104)
)
print(p1)
View(p1)
View(df)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest)
print(p)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest,
lines = list(size=3))
print(p)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest,
size=3)
print(p)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest,
size=1)
print(p)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest,
size=0.5)
print(p)
p <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'lines',
color = ~interest,
line = list(width = 4)
)
print(p)
p1 <- plot_ly(df,
x = ~year,
y = ~fundValues,
z = ~interest,
type = 'scatter3d',
mode = 'markers',
color = ~interest,
marker = list(size = 3, symbol = 104)
)
print(p1)
source('C:/Users/huanglinc/Desktop/P2 Sta/CS567_Project1/project1_updated_c.R')
