demo()
recursion
recursion()
demo(recursion)
demo
demo()
demo(graphics
)
install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
library(forign)
metallica<-list(metallicaNames, metallicaAges)
metallica<-cbind(metallicaNames, metallicaAges)
library(Rcmdr)
metallica<-c("lars", "james", "Jason", "Kirk")
install.packages("foreign")
install.packages("foreign")
install.packages("foreign")
install.packages("foreign")
install.packages("Hmisc")
install.packages("Rcmdr", dependencies = TRUE)
install.packages("reshape")
library(forign)
library(Rcmdr)
library(reshape)
setwd("~/Public/Academic/Data/DSU_R/Chapter 03 (The R Environment)")
setwd("~/Documents/Academic/Data/DSU_R/Chapter 03 (The R Environment)")
metallica<-c("lars", "james", "Jason", "Kirk")
metallica
metallica<-metallica[metallica != "Jason"]
metallica
metallica<-c(metallica, "Rob")
metallica
metallicaNames<-c("Lars", "James", "Kirk", "Rob")
metallicaAges<-c(47, 47, 48, 46)
metallica<-list(metallicaNames, metallicaAges)
metallica<-cbind(metallicaNames, metallicaAges)
metallica<-data.frame(Name = metallicaNames, Age = metallicaAges)
metallica$childAge<-c(12, 12, 4, 6)
metallica$fatherhoodAge<-metallica$Age-metallica$childAge
name<-c("Ben", "Martin","Andy","Paul", "Graham","Carina","Karina","Doug","Mark", "Zoe")
#Default date format is yyyy-mm-dd
birth_date<-as.Date(c("1977-07-03", "1969-05-24", "1973-06-21", "1970-07-16", "1949-10-10", "1983-11-05", "1987-10-08", "1989-09-16", "1973-05-20", "1984-11-12"))
job<-c(1,1,1,1,1,2,2,2,2,2)
job<-c(rep(1, 5),rep(2, 5))
job<-factor(job, levels = c(1:2), labels = c("Lecturer", "Student"))
job<-gl(2, 5, labels = c("Lecturer", "Student"))
friends<-c(5,2,0,4,1,10,12,15,12, 17)
alcohol<-c(10,15,20,5,30,25,20,16,17,18)
income<-c(20000,40000,35000,22000,50000,5000,100,3000,10000,10)
neurotic<-c(10,17,14,13,21,7,13,9,14,13)
lecturerData<-data.frame(name, birth_date, job, friends, alcohol,income, neurotic)
#--------R souls tip 3.5-----------
husband<-c("1973-06-21", "1970-07-16", "1949-10-08", "1969-05-24")
wife<-c("1984-11-12", "1973-08-02", "1948-11-11", "1983-07-23")
agegap <- husband-wife
husband<-as.Date(c("1973-06-21", "1970-07-16", "1949-10-08", "1969-05-24"))
wife<-as.Date(c("1984-11-12", "1973-08-02", "1948-11-11", "1983-07-23"))
agegap <- husband-wife
agegap
lecturerData<-read.csv("Lecturer Data.csv", header = TRUE)
lecturerData$job<-factor(lecturerData$job, levels = c(1:2), labels = c("Lecturer", "Student"))
lecturerData<-read.delim("Lecturer Data.dat", header = TRUE)
lecturerData<-read.delim("Lecturer Data.txt", header = TRUE)
library(foreign)
lecturerData<- read.spss("Lecturer Data.sav",use.value.labels=TRUE, to.data.frame=TRUE)
lecturerData$birth_date <- as.Date(as.POSIXct(lecturerData$birth_date , origin="1582-10-14"))
#--------Exporting files-----------
write.table(metallica, "Metallica Data.txt", sep="\t", row.names = FALSE)
setwd("C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1")
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
install.packages("plotly")
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
packageVersion('plotly')
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
# volcano is a numeric matrix that ships with R
p <- plot_ly(z = ~volcano) %>% add_surface()
# volcano is a numeric matrix that ships with R
p <- plot_ly(z = ~volcano) %>% add_surface()
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
source('C:/Users/huanglinc/Desktop/Project2 Statistics/CS567_Project1/project1_updated_c.R')
kd <- with(MASS::geyser, MASS::kde2d(duration, waiting, n = 50))
p <- plot_ly(x = kd$x, y = kd$y, z = kd$z) %>% add_surface()
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="surface-2")
chart_link
library(plotly)
kd <- with(MASS::geyser, MASS::kde2d(duration, waiting, n = 50))
p <- plot_ly(x = kd$x, y = kd$y, z = kd$z) %>% add_surface()
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="surface-2")
mtcars$am[which(mtcars$am == 0)] <- 'Automatic'
mtcars$am[which(mtcars$am == 1)] <- 'Manual'
mtcars$am <- as.factor(mtcars$am)
p <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Weight'),
yaxis = list(title = 'Gross horsepower'),
zaxis = list(title = '1/4 mile time')))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="scatter3d-basic")
chart_link
